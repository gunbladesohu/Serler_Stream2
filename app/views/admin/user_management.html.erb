<h1>User Management</h1>
<div id="mainTable"></div>
<input id="updateEmail" hidden></input>

<script  type="text/javascript">
            
       
            
             var dataSource = new kendo.data.DataSource({
                             transport: {
                                     read:  {
                                        url: "/admin/getUserList",
                                        dataType: "json"
                                    },
                                     create:  {
                                        url: function (e){
                                            var selectedRolesId = multi._old;
                                             
                                             var first_name = e.first_name;
                                             var middle_name = e.middle_name;
                                             var last_name = e.last_name;
                                             var email = e.email;
                                             var password_digest = e.password_digest;
                                             var affiliation = e.affiliation;
                                             var gender = e.gender;
                                             
                                             var dob = "";
                                             if( e.dob ) {
                                                 dob = e.dob.getDate() + "/" + (e.dob.getMonth() + 1) + "/" + e.dob.getFullYear();
                                            }
                                             
                                            if( !middle_name ) {
                                                 middle_name = "";
                                            }
                                             
                                             
                                             var returnUrl = "/admin/addNewUser?selectedRolesId=" + selectedRolesId
                                                             + "&first_name=" + first_name + "&middle_name=" + middle_name + "&last_name=" + last_name
                                                             + "&email=" + email + "&password_digest=" + password_digest + "&affiliation=" + affiliation
                                                             + "&dob=" + dob + "&gender=" + gender;
                                             
                                             
                                             
                                            return returnUrl;   
                                        },
                                        dataType: "json",
                                        type: "POST",
                                        complete: function(e) {
                                			grid.dataSource.read(); 
                                		}
                                    },
                                     update:  {
                                         url: function(e) {
                                            var selectedRolesId = multi._old;
                                             var userId = e.id;
                                             
                                             var first_name = e.first_name;
                                             var middle_name = e.middle_name;
                                             var last_name = e.last_name;
                                             var email = e.email;
                                             var password_digest = e.password_digest;
                                             var affiliation = e.affiliation;
                                             var gender = e.gender;
                                             
                                             var dob = "";
                                             if( e.dob ) {
                                                 dob = e.dob.getDate() + "/" + (e.dob.getMonth() + 1) + "/" + e.dob.getFullYear();
                                            }
                                             
                                             var returnUrl = "/admin/updateUser?userId=" + userId + "&selectedRolesId=" + selectedRolesId
                                                             + "&first_name=" + first_name + "&middle_name=" + middle_name + "&last_name=" + last_name
                                                             + "&email=" + email + "&password_digest=" + password_digest + "&affiliation=" + affiliation
                                                             + "&dob=" + dob + "&gender=" + gender;
                                             
                                             return returnUrl;                
                                            
                                        },
                                        dataType: "json",
                                        type: "POST",
                                        complete: function(e) {
                                			grid.dataSource.read(); 
                                		}
                                    },
                                    destroy: {
                                        url: function(e) {
                                            return "/users/" + e.id;
                                        },
                                        dataType: "json",
                                        type: "DELETE"
                                    }
                                    ,
                                    parameterMap: function(options, operation) {
                                        if (operation !== "read" && options.models) {
                                            return {models: kendo.stringify(options.models)};
                                        }
                                    }
                                },
                                pageSize: 20
                                ,
                            schema: {
                                model: {
                                    id: "id",
                                    fields: {
                                        id: {editable: false, nullable: false },
                                        first_name: {type: "string", editable: true, nullable: false, 
                                        
                                            validation: {
                                                required: true,
                                                required: { message: " Please enter first name" }
                                            }
                                        },
                                        middle_name: {type: "string", editable: true, nullable: true },
                                        last_name: {type: "string", editable: true, nullable: false , 
                                        
                                            validation: {
                                                required: true,
                                                required: { message: " Please enter last name" }
                                            }
                                            
                                        },
                                        gender: {type: "string", editable: true, nullable: false },
                                        dob: {type: "date", editable: true, nullable: false },
                                        email: {type: "string", editable: true, nullable: false ,
                                            
                                            validation: {
                                                required: { message: " Please enter email" }
                                                ,
                                                    customEmailValidation: function (input) {
                                                         var condition = false;
                                                         
                                                       if (input.is("[name='email']")) {
                                                            
                                                            if(isValidEmailAddress(input.val()) == true ){
                                                                
                                                                if ($("#updateEmail").val() != input.val()){
                                                                    
                                                                   
                                                                    
                                                                    $.ajax({
                                                                        type : 'get',
                                                                        url : "/admin/exsitedEmailCheck",
                                                                        data : "email=" + input.val(),    
                                                                        dataType : 'json',
                                                                        async : false,
                                                                        context : document.body,
                                                                        success : function(response) {
                                                                            
                                                                            if(response != null){
                                                                                
                                                                                 condition = true;
                                                                            }
                                                                        }
                                                                      });
                                                                      
                                                                     
                                                                }
                                                                
                                                            }else{
                                                                input.attr("data-customEmailValidation-msg", " Please provide a valid email address");
                                                                return /^[A-Z]/.test(input.val());
                                                            }
                                                        }
                                                        
                                                         if (condition){
                                                                         
                                                            input.attr("data-customEmailValidation-msg", " This email is already used, please provide different email");   
                                                            return /^[A-Z]/.test(input.val());
                                                         }
                                                                     
                                                        return true;
                                                }
                                            }
                                        },
                                        affiliation: {type: "string", editable:true, nullable:false},
                                        
                                        password_digest: {type: "string", editable: true, nullable: false ,
                                            
                                             validation: {
                                                required: { message: " Please enter password" },
                                                customValidation: function (input) {
                                                    if (input.is("[name='password_digest']") && !input.val().match(/^(?=.*\d)[0-9a-zA-Z]{6,}$/)) {
                                                        input.attr("data-customValidation-msg", " Password needs to contain 6 characters and 1 number at least");
                                                        return /^[A-Z]/.test(input.val());
                                                    }

                                                    return true;
                                                }
                                            }
                                        },
                                        role_name: {type: "string", editable: true, nullable: false }
                                    }
                                }
                            }
                        });
                        
       var grid =  $("#mainTable").kendoGrid({
                    dataSource: dataSource,
                    height: 550,
                    sortable: true,
                    resizable: true,
                    pageable: {
                        refresh: true,
                        pageSizes: true,
                        buttonCount: 5
                    },
                    toolbar: [{ name: "create", text: "Register New User" }],
                    columns: [
                    { field: "first_name", title: "First Name" }, 
                    { field: "middle_name", title: "Middle Name", hidden: true ,editor: function (container, options) {
                            $('<input data-text-field="' + options.field + '" ' +
                                    'class="k-input k-textbox" ' +'placeholder="(Optional)" ' +
                                    'data-value-field="' + options.field + '" ' +
                                    'data-bind="value:' + options.field + '"/>')
                                    .appendTo(container)
                        }
                        
                    }, 
                    { field: "last_name", title: "Last Name" }, 
                    { field: "email", title: "Email"
                    // , editor: emailEditor 
                        
                    }, 
                    { field: "gender", title: "Gender" , hidden: true , editor: genderDropDownEditor}, 
                    { field: "dob", title: "Date of birth" , hidden: true, format: "{0: dd/MM/yyyy}"},
                    { field: "affiliation", title: "Affiliation" , hidden: true},
                    { field: "password_digest", title: "Password" , hidden: true},
                    { field: "role_name", title: "User Roles", editor: rolesMultiSelect , width: "250px"},
                    { command: [{name:"edit",text:"Edit"}, {name:"destroy",text:"Remove"}], title: "&nbsp;", width: "250px" }]
                     ,editable: {
                         mode: "popup", 
                         confirmation: "Are you sure that you want to delete this user?"
                     },
                     edit:function(e){
                         
                         $("#updateEmail").val("");
                         $("#updateEmail").val(e.model.email);
                         
                        //  console.log(e.model.email);
                        //  updatedEmail = e.model.email;
                         
                            if(isCreating){
                                isCreating = false;
                                e.container.kendoWindow("title","Register New User");
                            }else{
                                e.container.kendoWindow("title","Edit User");
                            }
                        }
                }).data("kendoGrid");
                
                var genderData = [
                        { text: "Male", value: "Male" },
                        { text: "Female", value: "Female" }
                    ];
                var multi;    
                 function genderDropDownEditor(container, options) {
                     
                    var dropdown = $('<input required name="' + options.field + '"/>')
                        .appendTo(container)
                        .kendoDropDownList({
                            autoBind: true,
                            dataTextField: "text",
                            dataValueField: "value",
                            dataSource: genderData
                        }).data("kendoDropDownList");
                    
                  
                        
                }
                
               
                
                function emailEditor(container, options) {
                      
                    //   updatedEmail = options.model.email;
                      
                      $('<input type="text" class="k-input k-textbox" name="email" required="required" data-required-msg=" Please enter email" data-bind="value:email" />')
                        .appendTo(container)
                }
                
                function rolesMultiSelect(container, options) {
                    
                    var Roles = options.model.role_name;
                    var roleSource = new kendo.data.DataSource({
                        serverFiltering: true,
                             transport: {
                                     read:  {
                                        url: "/admin/getRoles",
                                        dataType: "json"
                                    }
                                }
                        });
                        
                    multi = $('<input name="' + options.field + '"/>')
                        .appendTo(container)
                        .kendoMultiSelect({
                            dataTextField: "name",
                            dataValueField: "id",
                            autoBind: false,
                            dataSource: roleSource
                        }).data("kendoMultiSelect");
                        
                        var array =[];
                         roleSource.fetch(function() {
                          var view = roleSource.view();
                          
                          
                          $.each( view, function( key, value ) {
                              if(value.name != "User"){
                                  var roleValues = value.name;
                                  if(Roles.indexOf(roleValues) >= 0){
                                      array.push(value.id.toString());
                                  }
                              }
                            });
                         
                          multi.value(array);
                        });
                }
                
                var isCreating = false;
                 $(".k-grid-add").on("click",function(){
                                isCreating = true;
                    });
                
                
                function isValidEmailAddress(emailAddress) {
                    var pattern = /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
                    return pattern.test(emailAddress);
                }
                
    //  $(document).ready(function () {
         
             
                 
    //  });
    
            
</script>

